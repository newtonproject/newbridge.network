'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.newdocsSearchIndex=index;index.add({'id':0,'href':'/docs/api/api-endpoints/','title':"API Endpoints",'section':"API Docs",'content':"We provided public API addresses for NewBridge.\nNewBridge Core API #  NewBridge Core API provides lookup services for NewBridge App and 3rd-party apps to use NewBridge. There are two different environments, Production and Test.\nProduction environment operates for each blockchain\u0026rsquo;s Main Networks.\nTest environment is for testing purpose only and operates for selectd Test Networks for each blockchain.\nProduction Networks #  https://api.end.point.to.be.replaced\nTest Networks #  https://api.end.point.to.be.replaced\nTransations on Test Networks are for testing purpose only.  XChain API #  XChain api is backend api for Main API and NewBridgeCore, chainapi is defined in grpc\nThe Chain API server is defined as follow:\n// The ChainAPI service definition. service ChainAPI { rpc CreateAccount (CreateAccountRequest) returns (CreateAccountReply) {} } Currently there are no public XChain API Endpoints provided by Newton Project.\n"});index.add({'id':1,'href':'/docs/architecture/','title':"NewBridge Architecture",'section':"Documentation",'content':"NewBridge has multiple components, here is a simplified list:\n NewBridge Core  Validator   Secure Vault  Collection Payout   Monitor APIs  NewBridge Service API XChain API    And a graph to the Architecture:\n Monitor #  Each chain has its own monitor program, which will detect the payment status of the address in the system based on token information.\nSecure Vault #  Secure Vault is a component to keep the assets safe and secure in each blockchain. And it is also functions as a service to collect the deposit from each blockchain, as well as payout the assets to another account in the blockchain validated by the NewBridge Core Validator component.\nCollection #  Each chain has its own collection program\n native for native assets such as ETH or NEW, general transfer burnable for burnable token，use burn function to burn token transfer transfer token to system offline wallet  Payout #  Each chain has its own payout program\n native native coin user general transfer, from MainAddress to payout mintable for mintable token, call mint function by MainAddress transfer for token, call transfer function by MainAddress  NewBridge Core (Validator) #  NewBridge Core is used to coordinate the user deposit, handling fee, payout;\n Input  User deposit address System receipt address Amount   Out  User receipt address Amount    "});index.add({'id':2,'href':'/docs/assets/','title':"Supported Assets",'section':"Documentation",'content':"Newton(NEW) #     Blockchain Name Symbol Type Contract     NewChain Newton NEW Base Coin N/A   Ethereum Newton NEW ERC-20 0x46B9e715b2aB7D5999DEe748eFe9379E4f94e0bF   HecoChain Newton NEW HRC-20 0x3A47a7e31b00C5754e2580907BDe73132DF48637   BinanceSmartChain Newton NEW BEP-6 0x628e11FfEdb79b3d536220F56242cC3B0fF5eC87    Ethereum(ETH) #     Blockchain Name Symbol Type Contract     Ethereum Ether ETH Base Coin N/A   NewChain NewETH NETH NRC-6 0x57B8154cb20D8a99a0d4aC55db3bcd19f61Baa5B    Tether USD(USDT) #     Blockchain Name Symbol Type Contract     Ethereum Tether USD USDT ERC-20 0xdAC17F958D2ee523a2206206994597C13D831ec7   NewChain NewUSDT NUSDT NRC-6 0x4BFB4297f9C28a373aE6ae58a8f8EfeFF334cae8    USDC(USDC) #     Blockchain Name Symbol Type Contract     Ethereum USDC USDC ERC-20 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48   NewChain NewUSDC NUSDC NRC-6 0x47944D1B9758424eb628dB7E2daA5F522745310D    Wrapped BTC(WBTC) #     Blockchain Name Symbol Type Contract     Ethereum Wrapped BTC WBTC ERC-20 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599   NewChain NewWBTC NWBTC NRC-6 0x9fAaBEa3686c7176349406AB52D1eD31B693ac0b    HuobiToken(HT) #     Blockchain Name Symbol Type Contract     HecoChain NewHHT NHHT Base Coin N/A   NewChain NewHT NHT NRC-6 0xe21C4074562D473e8fad1311dB018d6Ff94a5Fa4   NewChain HuobiToken HT NRC-6 0xd23C9D75BC29eDC6eCb1760975ae30b98fbBD263   Ethereum HuobiToken HT ERC-20 0x6f259637dcD74C767781E37Bc6133cd6A68aa161    OKB(OKB) #     Blockchain Name Symbol Type Contract     Ethereum OKB OKB ERC-20 0x75231F58b43240C9718Dd58B4967c5114342a86c   NewChain NewOKB NOKB NRC-6 0xe5E93F385bBebc4656FBA1b3faFF2B5C9B761EA0    Uniswap(UNI) #     Blockchain Name Symbol Type Contract     Ethereum Uniswap UNI ERC-20 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984   NewChain NewUNI NUNI NRC-6 0xdA4f489BBCDBb7ADe39AD60205bd64b38C1c2A40    yearn.finance(YFI) #     Blockchain Name Symbol Type Contract     Ethereum yearn.finance YFI ERC-20 0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e   NewChain NewYFI NYFI NRC-6 0xB2405bC26f68A49D52C722d6Ddc9902AB8dC30c7    NSB(NSB) #     Blockchain Name Symbol Type Contract     NewChain 牛屎币 NSB NRC-6 0x23262131c5EE341470df6A2D037d0Cd78A49A43a   HecoChain NewBridge NSB nbNSB HRC-20 0x08230238314326CCC2f3196786771ed15d75705f   BinanceSmartChain NewBridge NSB nbNSB BEP-20 0x8b2CBE4259f8fd2FCCD164c9FEe455624B241805    Binance Coin(BNB) #     Blockchain Name Symbol Type Contract     BinanceSmartChain Binance Coin BNB Base Coin N/A   NewChain NewBBNB NBBNB NRC-6 0x8Ef1F434D55c97F8DCeD8527dfbEBE963eAd3Ff6    Fees #  NewBridge cross-chain transfer fees are adjusted with the price of transactions fees change for each blockchains.\nVisit NewBridge App for current cross-chain transfer fee.\n"});index.add({'id':3,'href':'/docs/api/','title':"API Docs",'section':"Documentation",'content':"Welcome to NewBridge API documents for Developers.\nIntroduction #  Join the developers who are building the next generation of cross-chain services. Our comprehensive documentation and guides help you explore the NewBridge API and features, and get integrated to use NewBridge as soon as possible.\nBrowse APIs #   API Endpoints API Endpoints for NewBridge\n   (Core) Pairs Info API Lookup available chain networks and asset paris for different bridge directions\n   (Core) Account API Lookup account deposit address in NewBrige\n   (Core) Account History API Returns a JSON structure with details of the NewBridge transfer history of the specified accounts\n   (XChain) Create Account (XChain) Create Account\n   XChain API #  XChain api is backend api for Main API and NewBridgeCore, chainapi is defined in grpc\nThe Chain API server is defined as follow:\n// The ChainAPI service definition. service ChainAPI { rpc CreateAccount (CreateAccountRequest) returns (CreateAccountReply) {} }   CreateAccount  "});index.add({'id':4,'href':'/docs/contributing/','title':"How to Contribute",'section':"Documentation",'content':"We’re still working out the kinks to make contributing to this project as easy and transparent as possible, but we’re not quite there yet. Hopefully this document makes the process for contributing clear and answers some questions that you may have.\nRepository Organization #   NewBrige Network Website  Branch Organization for Website #  Submit all changes directly to the main branch. We don’t use separate branches for development or for upcoming releases. We do our best to keep main in good shape, with all tests passing. Any accepted changes in main will be automatically tested and deployed once the tests are passed.\nBugs #  Where to Find Known Issues #  We are using GitHub Issues for our public bugs. We keep a close eye on this and try to make it clear when we have an internal fix in progress. Before filing a new task, try to make sure your problem doesn’t already exist.\nReporting New Issues #  The best way to get your bug fixed is to provide a reduced test case.\nContribution to Contents #  We are accepting documentation contributions to contents. As well as translations to this website.\nContributor License Agreement (CLA) #  In order to accept your pull request, we need you to submit a CLA.\nOnce you open a pull request, the CLA Bot will check if you have previously signed a CLA to the repo you are contributing to. If not, please follow the CLA Bot\u0026rsquo;s message to finish signing CLA. For each repo, you have only sign the CLA once.\nView Contributor License Agreement.\nStyle Guide #  We use an automatic code formatter called Prettier.\nCurrently we have a markdown check for the contents dirs.\nUse following command to check your format for the contents:\nyarn check-contents To auto fix errors or formating, use the command below, this should make your contents looks much better.\nyarn format-contents License #  By contributing to NewBridge Network Website, you agree that your contributions will be licensed under its CC0 1.0 and Apache License 2.0.\nSee README on Github for more information.\n"});index.add({'id':5,'href':'/docs/api/pairs/','title':"(Core) Pairs Info API",'section':"API Docs",'content':"GET Pairs Info #  GET /v2/newbridge/pairs\nReturns a JSON structure with details of the NewBridge supported blockchain network and assets info.\nAPI parameters #  curl -v https://replace-api-domain.ext/newbridge/pairs Response 200 #  { \u0026#34;pairs\u0026#34;: [ { \u0026#34;bridge_pair\u0026#34;: \u0026#34;newchain-ethereum\u0026#34;, \u0026#34;eth2new_fee_min_amount\u0026#34;: \u0026#34;10000\u0026#34;, \u0026#34;eth2new_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;eth2new_min_deposit_amount\u0026#34;: \u0026#34;100000\u0026#34;, \u0026#34;ethereum_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;0xa6075A8929F53e2dCc2A578d117f3Fb234a01F15\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;0xa6075A8929F53e2dCc2A578d117f3Fb234a01F15\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Newton\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;NEW\u0026#34;, \u0026#34;decimals\u0026#34;: 18, \u0026#34;asset_type\u0026#34;: \u0026#34;ERC20\u0026#34;, \u0026#34;chain_id\u0026#34;: 4, \u0026#34;sub_network\u0026#34;: \u0026#34;Rinkeby\u0026#34;, \u0026#34;network_name\u0026#34;: \u0026#34;Ethereum\u0026#34;, \u0026#34;network_prefix\u0026#34;: \u0026#34;eth\u0026#34; }, \u0026#34;new2eth_fee_min_amount\u0026#34;: \u0026#34;20000\u0026#34;, \u0026#34;new2eth_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;new2eth_min_deposit_amount\u0026#34;: \u0026#34;50000\u0026#34;, \u0026#34;newchain_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Newton\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;NEW\u0026#34;, \u0026#34;decimals\u0026#34;: 18, \u0026#34;asset_type\u0026#34;: \u0026#34;Coin\u0026#34;, \u0026#34;chain_id\u0026#34;: 1007, \u0026#34;sub_network\u0026#34;: \u0026#34;Testnet\u0026#34;, \u0026#34;network_name\u0026#34;: \u0026#34;NewChain\u0026#34;, \u0026#34;network_prefix\u0026#34;: \u0026#34;new\u0026#34; } }, { \u0026#34;bridge_pair\u0026#34;: \u0026#34;newchain-hecochain\u0026#34;, \u0026#34;heco2new_fee_min_amount\u0026#34;: \u0026#34;100\u0026#34;, \u0026#34;heco2new_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;heco2new_min_deposit_amount\u0026#34;: \u0026#34;10000\u0026#34;, \u0026#34;hecochain_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;0x0C1e6DFD61aA2a82A5A8bB6A6b4b378F95624c4B\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;0x0C1e6DFD61aA2a82A5A8bB6A6b4b378F95624c4B\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Newton\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;NEW\u0026#34;, \u0026#34;decimals\u0026#34;: 18, \u0026#34;asset_type\u0026#34;: \u0026#34;HRC20\u0026#34;, \u0026#34;chain_id\u0026#34;: 256, \u0026#34;sub_network\u0026#34;: \u0026#34;HecoTestnet\u0026#34;, \u0026#34;network_name\u0026#34;: \u0026#34;HecoChain\u0026#34;, \u0026#34;network_prefix\u0026#34;: \u0026#34;heco\u0026#34; }, \u0026#34;new2heco_fee_min_amount\u0026#34;: \u0026#34;100\u0026#34;, \u0026#34;new2heco_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;new2heco_min_deposit_amount\u0026#34;: \u0026#34;10000\u0026#34;, \u0026#34;newchain_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Newton\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;NEW\u0026#34;, \u0026#34;decimals\u0026#34;: 18, \u0026#34;asset_type\u0026#34;: \u0026#34;Coin\u0026#34;, \u0026#34;chain_id\u0026#34;: 1007, \u0026#34;sub_network\u0026#34;: \u0026#34;Testnet\u0026#34;, \u0026#34;network_name\u0026#34;: \u0026#34;NewChain\u0026#34;, \u0026#34;network_prefix\u0026#34;: \u0026#34;new\u0026#34; } } ] }    Name Type Description     newchain_asset Token Assets on NewChain   ethereum_asset Token Assets on Ethereum family, the name can be changed to ethereum_asset , hecochain_asset or bschain_asset.   _min_deposit_amount string Minium deposit amount for \u0026lt;A2B\u0026gt; direction. \u0026lt;A2B\u0026gt; can be new2eth, new2heco or new2bsc.   min_deposit_amount string Minium deposit amount for \u0026lt;B2A\u0026gt; direction. \u0026lt;B2A\u0026gt; can be eth2new, heco2new or bsc2new.   _fee_percent string Fee percentage for \u0026lt;A2B\u0026gt; direction. \u0026lt;A2B\u0026gt; can be new2eth, new2heco or new2bsc.   _fee_percent string Fee percentage for eth2new direction. \u0026lt;B2A\u0026gt; can be eth2new, heco2new or bsc2new.   _fee_min_amount string Minium fee for \u0026lt;A2B\u0026gt; direction. \u0026lt;A2B\u0026gt; can be new2eth, new2heco or new2bsc.   _fee_min_amount string Minium fee for eth2new direction. \u0026lt;B2A\u0026gt; can be eth2new, heco2new or bsc2new.   bridge_pair string bridage pair blockchain name, merge of NewChain family and Ethtereum family, such as newchain-ethereum, newchain-hecochain, newchain-bschain.    Fee #  The actual amount of fee will use the larger one in fee_percent and fee_min_amount after calculation.\nToken type definition #     Name Type Description     address string Contract address. 0x format for ethereum, NEW address for newchain. null for chain coin like ETH or NEW   raw_address string Contract address in 0x format.   name string Asset Name   symbol string Asset Symbol   decimals uint8 Asset Presision.   asset_type string Asset Type. Coin or NRC6 for NewChain. Coin or ERC20 for Ethereum.   chain_id int ChainID   sub_network string Sub Network Name. Mainnet or Testnet for NewChain, Mainnet or Rinkeby for Ethereum.   network_name string The network name, such as NewChain, Ethereum, HecoChain, BSChain.   network_prefix string The prefix of network, such as new, eth, heco, bsc.    Network #     Name Prefix     NewChain new   Ethereum eth   HecoChain heco   BSChain bsc    "});index.add({'id':6,'href':'/docs/api/account/','title':"(Core) Account API",'section':"API Docs",'content':"GET Account Info #  GET /v2/newbridge/account\nReturns a JSON structure with details of one account\u0026rsquo;s address in bridged network.\nAPI parameters #  Required #     Name In Type Description Enum     direction query string Specify NewBridge network direction. new2eth eth2new new2heco heco2new new2bsc bsc2new   ethereum_recipient_address query string Reciving account on ethereum in new2eth direction. Must be address starting with 0x. The key of name can be changed to hecochain_recipient_address or bschain_recipient_address    newchain_recipient_address query string Reciving account on ethereum in eth2new direction. Can be address starting with NEW or 0x.     curl -v https://replace-api-domain.ext/newbridge/account?ethereum_recipient_address=0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026amp;direction=new2eth Response 200 #  { \u0026#34;ethereum_recipient_address\u0026#34;: \u0026#34;0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026#34;, \u0026#34;newchain_recipient_raw_address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;new2eth\u0026#34;, \u0026#34;newchain_deposit_address\u0026#34;: \u0026#34;NEW17zLJnGFnhi9b3yPUanjiieXknCirQhNwWE1\u0026#34;, \u0026#34;newchain_deposit_raw_address\u0026#34;: \u0026#34;0x5741E7e542828DF38A888bcc9b8f9500e4331420\u0026#34; }    Name Type Description     ethereum_recipient_address string Receiving address in on ethereum for new2eth direction. The name can be changed to hecochain_recipient_address or bschain_recipient_address.   newchain_recipient_address string Receiving address in on newchain for eth2new direction.   newchain_recipient_raw_address string Receiving address in 0x on newchain for eth2new direction.   direction string NewBridge network direction   ethereum_deposit_address string Deposit address on ethereum for eth2new direction. The name can be changed to hecochain_deposit_address or bschain_deposit_address.   newchain_deposit_address string Deposit address on newchain for new2eth direction.   newchain_deposit_raw_address string Deposit address in 0x on newchain for new2eth direction.    Error Codes #     Status Code Description Params     400 account_not_found Acount was not found    400 address_is_in_invalid_format Requested address format is not valid { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;newchain_address\u0026rdquo; } or { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;ethereum_address\u0026rdquo; }   429 too_many_requests Too many requests have been made to the api.    500 internal_server_error Internal server error    503 service_unavailable Service is temporary unavailable     "});index.add({'id':7,'href':'/docs/api/history/','title':"(Core) Account History API",'section':"API Docs",'content':"GET Account History #  GET /v2/newbridge/history\nReturns a JSON structure with details of the NewBridge transfer history of the specified accounts.\nAPI parameters #  Required #     Name In Type Description Enum Default     newchain_address query string At least one parameter should be provided in newchain_address and ethereum_address. NewChain address can be starting with NEW or using raw hex address starting with 0x.     ethereum_address query string At least one parameter should be provided in newchain_address and ethereum_address. Ethereum address should be starting with 0x.      Optional #     Name In Type Description Enum Default     page_id query integer Page number.     page_size query integer Number of results per page.     bridge_pair query string bridage pair blockchain name, merge of NewChain family and Ethtereum family, such as newchain-ethereum, newchain-hecochain, newchain-bschain. newchain-ethereum newchain-hecochain newchain-bschain     curl -v https://replace-api-domain.ext/newbridge/history?newchain_address=0x97549E368AcaFdCAE786BB93D98379f1D1561a29\u0026amp;bridge_pair=newchain-ethereum\u0026amp;page_size=1 Response 200 #  { \u0026#34;newchain_address\u0026#34;: \u0026#34;NEW17zS9ZvgGV1EaT8KT2tLjqRvQbcApjFot8xj\u0026#34;, \u0026#34;newchain_raw_address\u0026#34;: \u0026#34;0x97549E368AcaFdCAE786BB93D98379f1D1561a29\u0026#34;, \u0026#34;page_id\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;page_size\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;total_page\u0026#34;: \u0026#34;6\u0026#34;, \u0026#34;total_history\u0026#34;: \u0026#34;53\u0026#34;, \u0026#34;list\u0026#34;: [ { \u0026#34;from_network\u0026#34;: \u0026#34;Ethereum\u0026#34;, \u0026#34;from_sub_network\u0026#34;: \u0026#34;Rinkeby\u0026#34;, \u0026#34;from_chain_id\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;to_network\u0026#34;: \u0026#34;NewChain\u0026#34;, \u0026#34;to_sub_network\u0026#34;: \u0026#34;Testnet\u0026#34;, \u0026#34;to_chain_id\u0026#34;: \u0026#34;1007\u0026#34;, \u0026#34;from_address\u0026#34;: \u0026#34;0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026#34;, \u0026#34;from_raw_address\u0026#34;: \u0026#34;0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026#34;, \u0026#34;to_address\u0026#34;: \u0026#34;NEW17zS9ZvgGV1EaT8KT2tLjqRvQbcApjFot8xj\u0026#34;, \u0026#34;to_raw_address\u0026#34;: \u0026#34;0x97549E368AcaFdCAE786BB93D98379f1D1561a29\u0026#34;, \u0026#34;from_tx_hash\u0026#34;: \u0026#34;0xad9716fdd2ae16840a96360e54dd683511a20a68c9e855c58ea333a3930206b2\u0026#34;, \u0026#34;from_asset_type\u0026#34;: \u0026#34;Token\u0026#34;, \u0026#34;from_asset_name\u0026#34;: \u0026#34;TestNet Launch\u0026#34;, \u0026#34;from_asset_symbol\u0026#34;: \u0026#34;TL\u0026#34;, \u0026#34;from_asset_address\u0026#34;: \u0026#34;0xCc5b1517bae326F8E147D6bEd17F5F53bc2f85c5\u0026#34;, \u0026#34;to_tx_hash\u0026#34;: \u0026#34;0x54b61d26348c2f6b71866620325c3ec39eaa8c5d1488cecc7f5b28422583bcc9\u0026#34;, \u0026#34;to_asset_type\u0026#34;: \u0026#34;Token\u0026#34;, \u0026#34;to_asset_name\u0026#34;: \u0026#34;TestNet Launch\u0026#34;, \u0026#34;to_asset_symbol\u0026#34;: \u0026#34;TL\u0026#34;, \u0026#34;to_asset_address\u0026#34;: \u0026#34;0x243a5C81C1F9970aa3e6f51d73fC13eE853FC338\u0026#34;, \u0026#34;amount_requested\u0026#34;: \u0026#34;14\u0026#34;, \u0026#34;amount_fulfilled\u0026#34;: \u0026#34;14\u0026#34;, \u0026#34;fee\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;Confirmed\u0026#34; } ] }    Name Type Description     newchain_address String NewChain Address starting with NEW. Only one of newchain_address or ethereum_address will be returned.   ethereum_address String Ethereum Address starting with 0x. Only one of newchain_address or ethereum_address will be returned.   newchain_raw_address String NewChain Address in raw hex format starting with NEW.   page_id int Page number.   page_size int Number of results per page.   total_page int Number of total page.   total_history int Number of total results.   list BridgeHistory Array type of BridgeHistory.    Error Codes #     Status Code Description Params     400 account_not_found Acount was not found    400 address_is_in_invalid_format Requested address format is not valid { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;newchain_address\u0026rdquo; } or { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;ethereum_address\u0026rdquo; }   429 too_many_requests Too many requests have been made to the api.    500 internal_server_error Internal server error    503 service_unavailable Service is temporary unavailable     "});index.add({'id':8,'href':'/docs/shortcodes/','title':"Shortcodes",'section':"Documentation",'content':"About Shortcodes #  NewBridge website is using markdown format for documentations. Of course markdown is great for documents, but it is also very limited for website layout and functions.\nNewBridge website supports so called Shortcodes. They have been introduced for creating macros to be used in a website\u0026rsquo;s content.\nList of Shortcodes #    Buttons Shortcode   Code Block Shortcode   Columns Shortcode   Details Shortcode   Hints Shortcode   Icon Shortcode   KaTex Shortcode   Mermaid Chart Shortcode   Section List Shortcode   Tabs Shortcode   "});index.add({'id':9,'href':'/docs/api/create-account/','title':"(XChain) Create Account",'section':"API Docs",'content':"rpc CreateAccount (CreateAccountRequest) returns (CreateAccountReply) {}API parameters #  Required #  message CreateAccountRequest { string name = 1;}   Name Type Description     name string the nick name for the acccount to be created, in newbridge, this is the user\u0026rsquo;s recipient address of another chain    Response #  message CreateAccountReply { string name = 1; string address = 2; // the address to deposit }   Name Type Description     name string the nick name for the acccount to be created, in newbridge, this is the user\u0026rsquo;s recipient address of another chain   address string the address of current chain    "});index.add({'id':10,'href':'/updates/20210730a/','title':"NewBridge Launched Support for Binance Smart Chain",'section':"Updates",'content':"NewBridge added blockchain support for Binance Smart Chain. Cross-chain transfer between NewChain, HecoChain and Binance Smart Chain is available in NewBridge DApp.\nCurrently supported assets on Binance Smart Chain added in this update:\n Newton (NEW) Binance Coin (BNB) NewBridge NSB (nbNSB)  See full list of Supported Assets.\n"});index.add({'id':11,'href':'/updates/20210222a/','title':"Announcment on NewBridge Fee Adjustment",'section':"Updates",'content':"NewBridge cross-chain transfer fees are adjusted with the price of transactions fees change for each blockchains. Due to the increase in the price of Ether (ETH), NewBridge cross-chain fees are adjusted effective immediately as:\n   Assets NewChain to Ethereum Fee Ethereum to NewChain Fee     NEW - NEW 20000 40000   NETH - ETH 0.007 0.01   NUSDT - USDT 12 24   NUSDC - USDC 12 24   NWBTC - WBTC 0.0002 0.0004   NHT - HT 1 2   NOKB - OKB 1 2   NUNI - UNI 1 2   NYFI - YFI 0.0003 0.0006    Notice: Please check the fee in NewBridge App each time using NewBridge to cross assets.  "});index.add({'id':12,'href':'/docs/shortcodes/buttons/','title':"Buttons Shortcode",'section':"Shortcodes",'content':"Buttons are styled links that can lead to local page or external link.\nCode Example #  {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Button for relative URLs #  Code {{\u0026lt; button relref=\u0026#34;/\u0026#34; \u0026gt;}}Go Home{{\u0026lt; /button \u0026gt;}} Result Go Home   Button for external URLs #  Code {{\u0026lt; button href=\u0026#34;https://newtonproject.org\u0026#34; \u0026gt;}}Newton Project{{\u0026lt; /button \u0026gt;}} Result Newton Project   "});index.add({'id':13,'href':'/docs/shortcodes/code-block/','title':"Code Block Shortcode",'section':"Shortcodes",'content':"Settings for generate different functions Code Blocks\nCode Example #  Block Content #   ``` ## This is the content ```  Will results:\n## This is the content Syntax Highlight #  Add languages after ```\n ```javascript document.getElementById('demo').innerHTML = 'Hello JavaScript'; ```  Will results:\ndocument.getElementById(\u0026#34;demo\u0026#34;).innerHTML = \u0026#34;Hello JavaScript\u0026#34;; Display Line Numbers #  Line Numbers are not displayed by default.\nUse linenos in parameters.\n ```javascript {linenos=true} document.getElementById('demo').innerHTML = 'Hello JavaScript'; ```  Will results:\n1 2  document.getElementById(\u0026#34;demo\u0026#34;).innerHTML = \u0026#34;Hello JavaScript\u0026#34;; document.getElementById(\u0026#34;demo\u0026#34;).innerHTML = \u0026#34;Hello JavaScript\u0026#34;;   Change Starting Line Number #  Use linenostart in parameters.\n ```python {linenos=true,linenostart=13} ```  Will results:\n13 14 15 16 17 18 19 20 21 22 23 24  class BankAccount(object): def __init__(self, initial_balance=0): self.balance = initial_balance def deposit(self, amount): self.balance += amount def withdraw(self, amount): self.balance -= amount def overdrawn(self): return self.balance \u0026lt; 0 my_account = BankAccount(15) my_account.withdraw(50) print (my_account.balance, my_account.overdrawn())   Highlight Certain Lines #  Use hl_lines in parameters.\n ```ts {linenos=true,hl_lines=[3,\"8-10\"]} ```  Will results:\n1 2 3 4 5 6 7 8 9 10 11 12 13  interface User { name: string; id: number; } const user: User = { username: \u0026#34;Hayes\u0026#34;, Type \u0026#39;{ username: string; id: number; }\u0026#39; is not assignable to type \u0026#39;User\u0026#39;. Object literal may only specify known properties, and \u0026#39;username\u0026#39; does not exist in type \u0026#39;User\u0026#39;. Type \u0026#39;{ username: string; id: number; }\u0026#39; is not assignable to type \u0026#39;User\u0026#39;.  Object literal may only specify known properties, and \u0026#39;username\u0026#39; does not exist in type \u0026#39;User\u0026#39;. id: 0, };   Without Line Number:\n ```ts {hl_lines=[3,\"8-10\"]} ```  Will results:\ninterface User { name: string; id: number; } const user: User = { username: \u0026#34;Hayes\u0026#34;, Type \u0026#39;{ username: string; id: number; }\u0026#39; is not assignable to type \u0026#39;User\u0026#39;. Object literal may only specify known properties, and \u0026#39;username\u0026#39; does not exist in type \u0026#39;User\u0026#39;. Type \u0026#39;{ username: string; id: number; }\u0026#39; is not assignable to type \u0026#39;User\u0026#39;.  Object literal may only specify known properties, and \u0026#39;username\u0026#39; does not exist in type \u0026#39;User\u0026#39;. id: 0, }; "});index.add({'id':14,'href':'/docs/shortcodes/columns/','title':"Columns Shortcode",'section':"Shortcodes",'content':"Columns help organize shorter pieces of content horizontally for readability.\nCode Example #  The following short code will be displayed as a 3 columns layout in wide screen.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; ### Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ### Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ### Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} \u0026lt;!-- end columns block --\u0026gt; Preview #  Here\u0026rsquo;s what will look like for the code above.\nLeft Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   "});index.add({'id':15,'href':'/docs/shortcodes/details/','title':"Details Shortcode",'section':"Shortcodes",'content':"Details shortcode is a helper for HTML Details Element.\n  title is used for the contents of summary tag in details element.\n  open is used for the attribution of the details element. Specify the initial status of the details element.\n  Code Example #  {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Previews #  This will be closed by default Markdown content Lorem markdownum insigne\u0026hellip;   This is Opened by default Markdown content Lorem markdownum insigne\u0026hellip;   "});index.add({'id':16,'href':'/docs/','title':"Documentation",'section':"Home",'content':"There are several types of documentation available on this website:\nBrowse Docs #   NewBridge Architecture Describes the NewBrige Architecture\n   Supported Assets NewBridge Supported Assets\n   API Docs NewBridge API Documentations\n   How to Contribute Contributing to NewBridge Network\n   Shortcodes Shortcodes for making the contents better.\n   "});index.add({'id':17,'href':'/faq/','title':"FAQ for NewBridge",'section':"Home",'content':"What is NewBridge? #  NewBridge has implemented exchange the assets from NewChain to Other blockchain with cross-chain technology, It has supported NEW, USDT, ETH between Ethereum and NewChain, and more assets are coming soon!\nWhat can NewBridge do for you? #  NewBridge has implemented exchange the assets from NewChain to Other blockchain with cross-chain technology, You can transfer your ETH from Ethereum to NewChain, and use the NETH join Newton\u0026rsquo;s ecology, For example: You can lock your NETH and NUSDT in NewSwap for earn transaction fee; you can also transfer you NEW from NewChain to Ethereum, and join the Ethereum ecology by WNEW and so on\u0026hellip;\nNewBridge Users Guide. #  Requirements:\n  Browser User: You should install the NewMask plugin. Chrome Plugin or Firefox Plugin\n  Mobile User: You should install NewPay.\n  Transfer asset from NewChain to Ethereum: #  Confirm you can pay for it which asset you want to transfer. Then, input your ethereum address on target address input, and input transfer amount. Click Transfer Out, you can see apply approve page, if you confirm approve, then you will transferyour asset from NewChain to Ethereum.\nTransfer asset from Ethereum to NewChain: #  Change the transfer target, you can get a qrCode, which content is an ethereum address, if you send your ethereum asset to the address, you will transfer your asset from Ethereum to NewChain.\nTransfer asset from NewChain to HecoChain: #  Confirm you can pay for it which asset you want to transfer. Then, input your HecoChain address on target address input, and input transfer amount. Click Transfer Out, you can see apply approve page, if you confirm approve, then you will transferyour asset from NewChain to HecoChain.\nTransfer asset from HecoChain to NewChain: #  Change the transfer target, you can get a qrCode, which content is an HecoChain address, if you send your HecoChain asset to the address, you will transfer your asset from HecoChain to NewChain.\nHow is the NewBridge fee calculated? #  The NewBridge fee is used for on-chain transfers on NewChain and Ethereum. The fee is calculated according to the following rules: from Ethereum to NewChain, the fee is double the ETH transfer fee and double the NEW transfer fee; from NewChain to Ethereum, the fee is double the NEW transfer fee and double the ETH transfer fee. In the case of ERC20/NRC6 type of pass, the transfer fee is calculated by converting the market price to the pass principal. Due to the volatility of the market, there may be deviations, NewBridge will adjust the fees from time to time, NewBridge itself does not earn any fees from users.\n"});index.add({'id':18,'href':'/docs/shortcodes/hints/','title':"Hints Shortcode",'section':"Shortcodes",'content':"Hint shortcode can be used as hint/alerts/notification block.\nThere are 4 colors to choose: info, success, warning and danger.\nExample Code #  {{\u0026lt; hint [info|success|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Previews #  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  "});index.add({'id':19,'href':'/docs/shortcodes/icon/','title':"Icon Shortcode",'section':"Shortcodes",'content':"We\u0026rsquo;ve intergrated Bootstrap Icons for using vector icons in the website.\nCode Example #  {{\u0026lt; icon icon=[iconname] class=[classname] color=[color] \u0026gt;}} This will create a svg element like:\n\u0026lt;svg class=\u0026#34;icon classname\u0026#34; color=\u0026#34;color\u0026#34;\u0026gt; \u0026lt;use xlink:href=\u0026#34;/icons/bootstrap-icons.svg#iconname\u0026#34;\u0026gt;\u0026lt;/use\u0026gt; \u0026lt;/svg\u0026gt;   icon will be the icon you want to use.\n  class is the class for the svg element.\n  color is optional, the icon will take the color define by it\u0026rsquo;s parent element. You can set color if you want to use a different one.\n  The default icon size will take the line-height defined by it\u0026rsquo;s parent element.\n  Preview #  Cloud Icon\n{{\u0026lt; icon icon=\u0026#34;cloud\u0026#34; \u0026gt;}} Red Colored\n{{\u0026lt; icon icon=\u0026#34;cloud\u0026#34; color=\u0026#34;red\u0026#34; \u0026gt;}}   Cloud Icon\n Red Colored\n   "});index.add({'id':20,'href':'/docs/shortcodes/katex/','title':"KaTex Shortcode",'section':"Shortcodes",'content':"KaTeX shortcode let you render math typesetting in markdown document.\nSee KaTeX for more.\nCode Example #  // Simple One {{\u0026lt; katex [display] \u0026gt;}}\\pi(x){{\u0026lt; /katex \u0026gt;}} // Let\u0026#39;s do formula {{\u0026lt; katex [display] \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} // Let\u0026#39;s get complicated {{\u0026lt; katex [display] \u0026gt;}} \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } } {{\u0026lt; /katex \u0026gt;}}   Simple One\n  \\[\\pi(x)\\]  Let\u0026rsquo;s do formula\n \\[f(x) = \\int\\_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]  Let\u0026rsquo;s get complicated\n \\[\\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1\u0026#43;\\frac{e^{-2\\pi}} {1\u0026#43;\\frac{e^{-4\\pi}} {1\u0026#43;\\frac{e^{-6\\pi}} {1\u0026#43;\\frac{e^{-8\\pi}} {1\u0026#43;\\cdots} } } }\\]    Display Mode #  The default display mode is inline. You can put any katex inline witht the text. Taking  \\(\\pi(x)\\)  for example.\nWhen display attribute is set. The katex element itself will be set with a display: block CSS style.\n"});index.add({'id':21,'href':'/docs/shortcodes/mermaid/','title':"Mermaid Chart Shortcode",'section':"Shortcodes",'content':" Mermaid is library for generating svg charts and diagrams from text.\nExample #  {{\u0026lt;mermaid class=\u0026#34;text-center\u0026#34;\u0026gt;}} sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt;/mermaid \u0026gt;}}    mermaid.initialize({ \"flowchart\": { \"useMaxWidth\":true }, \"theme\": \"default\" } ) sequenceDiagram Alice-Bob: Hello Bob, how are you? alt is sick Bob-Alice: Not so good :( else is well Bob-Alice: Feeling fresh like a daisy end opt Extra response Bob-Alice: Thanks for asking end   Flowchart #  graph TD; A--B; A--C; B--D; C--D; View Code {{\u0026lt;mermaid class=\u0026#34;text-center\u0026#34;\u0026gt;}} graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; {{\u0026lt;/mermaid \u0026gt;}}    Sequence diagram #  sequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good! View Code {{\u0026lt;mermaid class=\u0026#34;text-center\u0026#34;\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! {{\u0026lt;/mermaid\u0026gt;}}    "});index.add({'id':22,'href':'/testnet-app/','title':"NewBridge Testnet App",'section':"Home",'content':"Warning Testnet App is for developers, cross-chain service providers and validators to test their services and Dapps.\nTransations on Test Networks should not considered as formal assets transactions.\n Continue only if you know what you are doing with Testnet.\nLaunch Testnet App  Related Docs #  Documentation #  Please reference Documentation.\nTestnet API Endpoints #  Please reference API Endpoints.\n"});index.add({'id':23,'href':'/cla/','title':"Newton Project Individual Contributor License Agreement",'section':"Home",'content':"Newton Project Individual Contributor License Agreement #  Thank you for your interest in Newton Project (\u0026ldquo;Newton Project\u0026rdquo;). In order to clarify the intellectual property license granted with Contributions from any person or entity, Newton Project must have a Contributor License Agreement (\u0026ldquo;CLA\u0026rdquo;) on file that has been signed by each Contributor, indicating agreement to the license terms below. This license is for your protection as a Contributor as well as the protection of Newton Project and its users; it does not change your rights to use your own Contributions for any other purpose.\nYou accept and agree to the following terms and conditions for Your present and future Contributions submitted to Newton Project. Except for the license granted herein to Newton Project and recipients of software distributed by Newton Project, You reserve all right, title, and interest in and to Your Contributions.\n1. Definitions #  \u0026ldquo;You\u0026rdquo; (or \u0026ldquo;Your\u0026rdquo;) shall mean the copyright owner or legal entity authorized by the copyright owner that is making this Agreement with Newton Project. For legal entities, the entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity are considered to be a single Contributor. For the purposes of this definition, \u0026ldquo;control\u0026rdquo; means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \u0026ldquo;Contribution\u0026rdquo; shall mean any original work of authorship, including any modifications or additions to an existing work, that is intentionally submitted by You to Newton Project for inclusion in, or documentation of, any of the products owned or managed by Newton Project (the \u0026ldquo;Work\u0026rdquo;). For the purposes of this definition, \u0026ldquo;submitted\u0026rdquo; means any form of electronic, verbal, or written communication sent to Newton Project or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, Newton Project for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by You as \u0026ldquo;Not a Contribution.\u0026rdquo;\n2. Grant of Copyright License #  Subject to the terms and conditions of this Agreement, You hereby grant to Newton Project and to recipients of software distributed by Newton Project a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and such derivative works.\n3. Grant of Patent License #  Subject to the terms and conditions of this Agreement, You hereby grant to Newton Project and to recipients of software distributed by Newton Project a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by You that are necessarily infringed by Your Contribution(s) alone or by combination of Your Contribution(s) with the Work to which such Contribution(s) was submitted. If any entity institutes patent litigation against You or any other entity (including a cross-claim or counterclaim in a lawsuit) alleging that your Contribution, or the Work to which you have contributed, constitutes direct or contributory patent infringement, then any patent licenses granted to that entity under this Agreement for that Contribution or Work shall terminate as of the date such litigation is filed.\n4. Authorization #  You represent that you are legally entitled to grant the above license. If your employer(s) has rights to intellectual property that you create that includes your Contributions, you represent that you have received permission to make Contributions on behalf of that employer, that your employer has waived such rights for your Contributions to Newton Project, or that your employer has executed a separate Corporate CLA with Newton Project.\n5. Original Creation #  You represent that each of Your Contributions is Your original creation (see section 7 for submissions on behalf of others). You represent that Your Contribution submissions include complete details of any third-party license or other restriction (including, but not limited to, related patents and trademarks) of which you are personally aware and which are associated with any part of Your Contributions.\n6. No Support Obligation #  You are not expected to provide support for Your Contributions, except to the extent You desire to provide support. You may provide support for free, for a fee, or not at all. Unless required by applicable law or agreed to in writing, You provide Your Contributions on an \u0026ldquo;AS IS\u0026rdquo; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON- INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.\n7. Licensed Works #  Should You wish to submit work that is not Your original creation, You may submit it to Newton Project separately from any Contribution, identifying the complete details of its source and of any license or other restriction (including, but not limited to, related patents, trademarks, and license agreements) of which you are personally aware, and conspicuously marking the work as \u0026ldquo;Submitted on behalf of a third-party: [named here]\u0026rdquo;.\n8. Notification #  You agree to notify Newton Project of any facts or circumstances of which you become aware that would make these representations inaccurate in any respect.\nPlease sign:\nName __ Date: ____\n"});index.add({'id':24,'href':'/docs/shortcodes/section/','title':"Section List Shortcode",'section':"Shortcodes",'content':"Section List #  Section renders pages in section as definition list, using title and description.\nCode Example #  Default Layout #  {{\u0026lt; section-list \u0026gt;}}   Section List Demo Page 1 \n   Section List Demo Page 2 \n   Section List Demo Page 3 This is the page description\n   Compact Layout #  {{\u0026lt; section-list compact \u0026gt;}}    Section List Demo Page 1   Section List Demo Page 2   Section List Demo Page 3   "});index.add({'id':25,'href':'/docs/shortcodes/tabs/','title':"Tabs Shortcode",'section':"Shortcodes",'content':"Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example #  MacOS MacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n "});})();